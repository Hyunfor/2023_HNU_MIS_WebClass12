가장 매번 먼저 해야할 세팅
1. 프로젝트 생성 - > web-INF/lib/ jar 라이브러리 복사
2. properites jar 등록 - > server 실행 - > server.xml Connection pool 등록

1. package 생성 - com.mis.controller(dto, dao, util)생성 - servlet

vo - > dao - > controller - > jsp
	상품전체목록(등록, 수정, 삭제) dao 
				등록 - > 목록 - > 수정 - > 삭제 controller
				등록 - > 목록 - > 상세 -> 수정 - > 삭제 controller
				
CREATE TABLE MEMBER (
    NAME VARCHAR2(10),
    USERID VARCHAR2(10),
    PWD VARCHAR2(10),
    EMAIL VARCHAR2(20),
    PHONE CHAR(13),
    ADMIN NUMBER(1) DEFAULT 0,
    -- 0: 사용자, 1: 관리자
    PRIMARY KEY(USERID)
);

SELECT * FROM tab;
SELECT * FROM MEMBER;

-- 추가 , 수정, 삭제, 변경시 COMMIT; 필수. COMMIT;해야 반영됨

-- 3명의 회원정보 추가
INSERT INTO MEMBER VALUES('이소미', 'somi', '1234', 'gmd@naver.com','010-2362-5157',0);
INSERT INTO MEMBER VALUES('하상호', 'sang12', '1234', 'hal2@naver.com','010-4321-4567',1);
INSERT INTO MEMBER VALUES('김윤승', 'light', '1234', 'youn1004@naver.com','010-2362-5157',0);
COMMIT;

SELECT * FROM MEMBER WHERE USERID='somi';
SELECT * FROM MEMBER WHERE ADMIN=1;
SELECT * FROM MEMBER WHERE ADMIN=0;
-- 위와 동일한 쿼리문
SELECT * FROM MEMBER WHERE ADMIN!=1;

-- 업데이트
SELECT * FROM MEMBER WHERE USERID='somi';
UPDATE MEMBER SET PHONE ='010-0000-0000'
WHERE USERID='somi';
COMMIT;

-- 삭제
SELECT * FROM MEMBER WHERE USERID='somi';
DELETE FROM MEMBER WHERE USERID='somi';
COMMIT;

CREATE TABLE EMPLOYEE (
    NAME VARCHAR(20),
    ADDRESS VARCHAR(100),
    SSN VARCHAR(15)
);

SELECT * FROM EMPLOYEE;

INSERT INTO EMPLOYEE VALUES('DUKE', 'SEOUL', '970224-1039234');
INSERT INTO EMPLOYEE VALUES('PORORO', 'PUSAN', '001222-1038782');
INSERT INTO EMPLOYEE VALUES('CANDY', 'DAEJEON', '981221-1829192');
COMMIT;

CREATE TABLE ITEM (
    NAME VARCHAR2(30),
    price VARCHAR2(40),
    elucidate VARCHAR2(100)
);

SELECT * FROM ITEM;
-- 테이블 삭제
drop table ITEM;

-- 아이템 정보 추가
INSERT INTO ITEM VALUES('존윅4포스터', '10,000', '존윅4 영화 포스터');
INSERT INTO ITEM VALUES('PS5디스크버전', '650,000', '플레이스테이션5 디스크버전');
INSERT INTO ITEM VALUES('포르쉐911', '200,000,000', '나도 포르쉐 타고 싶다!');
COMMIT;

-- 상품 테이블 및 이미지 등록

CREATE TABLE PRODUCT(
  CODE NUMBER(5),
  NAME VARCHAR2(100),
  PRICE NUMBER(8),
  PICTUREURL VARCHAR2(50),
  DESCRIPTION VARCHAR2(1000),
  PRIMARY KEY(CODE)
  );
  
CREATE SEQUENCE PRODUCT_SEQ START WITH 1 INCREMENT BY 1;

insert into product values(PRODUCT_SEQ.nextval, '개념을 콕콕 잡아주는 데이터베이스', 27000, 'db.jpg', '데이터베이스에 관한 모든 것을 쉽고 재미있게 정리한 교재...');
insert into product values(PRODUCT_SEQ.nextval, '웹표준을 위한 HTML5', 25000, 'html5.jpg', 'HTML5 가이드북. 홈페이지 제작을 위한 필수 선택 HTML 기본 문법...');
insert into product values(PRODUCT_SEQ.nextval, 'Dynamic Programming book 시리즈-01 오라클 11g + PL/SQL', 25000, 'oracle.jpg','Dynamic 실무 코칭 프로그래밍 Book의 첫번째 책으로, 오라클 11g의 새로운 ...');
insert into product values(PRODUCT_SEQ.nextval, 'Visual C++ MFC 윈도우 프로그래밍', 26000, 'mfc.jpg', 'Visual C++를 처음 시작하는 독자의 눈높이에 맞춘 Visual C++...');
insert into product values(PRODUCT_SEQ.nextval, 'jQuery and jQuery Mobile : 이해하기 쉽게 풀어쓴', 25000, 'jquery.jpg', '소스 하나로 데스크탑과 모바일까지 HTML5와 함께 사용한다. 초보자들도 ...');
commit;

SELECT * FROM PRODUCT;

DROP TABLE BOARD;
DROP SEQUENCE BOARD_SEQ;

CREATE TABLE BOARD (
  NUM NUMBER(5) PRIMARY KEY,
  PASS VARCHAR2(30),
  NAME VARCHAR2(30),
  EMAIL VARCHAR2(30),
  TITLE  VARCHAR2(50),
  CONTENT VARCHAR2(1000),
  READCOUNT NUMBER(4) DEFAULT 0,
  WRITEDATE DATE DEFAULT SYSDATE
  );

CREATE SEQUENCE BOARD_SEQ START WITH 1 INCREMENT BY 1;

insert into BOARD values(BOARD_SEQ.nextval, 1234,'성윤정', 'pinksung@nate.com', '첫방문','반갑습니다.',0,SYSDATE);
insert into BOARD values(BOARD_SEQ.nextval, 1234, '성윤정', 'pinksung@nate.com', '김밥','맛있어요.',0,SYSDATE);
insert into BOARD values(BOARD_SEQ.nextval, 3333, '전수빈', 'raccon@nate.com', '고등애','일식입니다.',0,SYSDATE);
insert into BOARD values(BOARD_SEQ.nextval, 1111, '성윤정', 'one@nate.com', '갯골마을','돼지삼겹살이 맛있습니다.',0,SYSDATE);
commit;

SELECT * FROM BOARD;